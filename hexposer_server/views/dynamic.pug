doctype html
html(lang='zxx')
   head

      // CSS
      link(rel="stylesheet" href="../css/button.css" type="text/css" media="all")
      link(rel="stylesheet" href="../css/hexagon.css" type="text/css" media="all")
      link(rel="stylesheet" href="../css/sidebar.css" type="text/css" media="all")
      link(rel="stylesheet" href="../css/SidebarNav.min.css" type="text/css" media="all")
      link(rel="stylesheet" href="../css/slider.css" type="text/css" media="all")
      link(rel="stylesheet" href="../css/style.css" type="text/css" media="all")
      
      title .: Hexaposer :. Bager Bingöl, Wladimir Nabok und Klaus Bochmann

      // Logo
      div.logo
         img(src="../images/logo2.png")

   body

      .row 
         // Hexagone
         .main-middle
            figure.hexagonBLUE
            figure.hexagonYELLOW
            figure.hexagonGREEN
            figure.hexagonRED
            figure.hexagonORANGE
            figure.hexagonPURPLE
            figure.hexagonGREY 
            figure.hexagonPINK

         .main-left
            // Slider: Nur zum Testen. Wird wieder gelöscht!
            div#gainContainer Gain
               input#gainSlider.slider(type="range" min="0" max="100" value="10")
               span#gainOutput 1.0 dB

            div#delayContainer Delay
               input#delaySlider.slider(type="range" min="0" max="100" value="0")
               span#delayOutput 0 sec

            div#panningContainer StereoPanning
               input#panningSlider.slider(type="range" min="0" max="100" value="50")
               span#panningOutput 0 LR

            div#distortionContainer Distortion
               input#distortionSlider.slider(type="range" min="0" max="100" value="0")
               span#distortionOutput 0

            div#frequencyContainer Frequency
               input#frequencySlider.slider(type="range" min="0" max="20000" value="1000")
               span#frequencyOutput 1000 HZ

            div#kneeContainer Knee
               input#kneeSlider.slider(type="range" min="0" max="100" value="75")
               span#kneeOutput 30 degree
               
            div#attackContainer Attack
               input#attackSlider.slider(type="range" min="0" max="1000" value="3")
               span#attackOutput 0.003 sec

            // Play/PauseButton
            #playStopButton
               button#play.button.play
               button#pause.button.pause

            // Burger-Box
            .column.main-right
               .side_menu
                  .burger_box
                     .menu-icon-container
                        a.menu-icon.js-menu_toggle.closed(href="#")
                           span.menu-icon_box
                              span.menu-icon_line.menu-icon_line--1
                              span.menu-icon_line.menu-icon_line--2
                              span.menu-icon_line.menu-icon_line--3

                  // Sidebar-Menu
                  .container
                     ul.sidebar-menu
                        li.treeview
                           h2 MediaElementSourceNode
                           h6 Mit der MediaElementSourceNode-Schnittstelle können ein oder mehrere Ton/Töne hinzugefügt werden.
                        li.treeview
                           h2 GainNode
                           h6 Mit der GainNode-Schnittstelle können Lautstärkeänderungen vorgenommen werden.
                        li.treeview
                           h2 DelayNode
                           h6 Mit der DelayNode-Schnittstelle kann eine Verzögerung hinzugefügt werden. 
                        li.treeview
                           h2 StereoPanningNode
                           h6 Die PannerNode-Schnittstelle entscheidet aus welcher Richtung die Soundausgabe kommt.
                        li.treeview
                           h2 WaveshaperNode
                           h6 Mit dem WaveshaperNode-Modul werden Audiosignale mit einer dynamischen Verzerrung hinterlegt.
                        li.treeview
                           h2 BiquadFilterNode (Frequenz)
                           h6
                        li.treeview
                           h2 BiquadFilterNode Typ:Lowpass
                           h6 Mit der BiquadFilterNode-Schnittstelle(Typ:Lowpass) werden Signale mit Frequenzen unterhalb ihrer Grenzfrequenz ungeschwächt passieren gelassen, während Anteile mit höherer Frequenzen gedämpft werden.
                        li.treeview
                           h2 BiquadFilterNode Typ:Notch
                           h6 Mit der BiquadFilterNode-Schnittstelle(Typ:Notch) werden Signale mit Frequenzen unterhalb ihrer Grenzfrequenz ungeschwächt passieren gelassen, während Anteile mit höherer Frequenzen gedämpft werden.
                        li.treeview
                           h2 CompressorNode (Knee)
                           h6
                        li.treeview
                           h2 CompressorNode (Attack)
                           h6

      // JS
      script(src="../js/jquery-3.3.1.js")
      script(src="../js/menu.js")
      script(src="../js/SidebarNav.min.js")
      script(src="../js/soundPlayback.js")

      .clear
      